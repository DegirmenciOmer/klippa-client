{"version":3,"sources":["components/Loading.js","components/FeedbackModal.js","components/PostForm.js","pages/Home.js","App.js","index.js"],"names":["Loading","Segment","Dimmer","active","inverted","Loader","content","FeedbackModal","feedbackState","setFeedbackState","feedbacksArray","fetchQuestions","TRY_AGAIN","useState","open","setOpen","Modal","onClose","onOpen","Header","Content","image","className","tag","Description","map","feedback","feedbacks","questionId","Actions","Button","primary","onClick","PostForm","questions","setQuestions","replyId","setReplyId","setFeedbacksArray","a","axios","get","data","q","question","answer","id","_id","console","error","useEffect","handleSubmit","e","preventDefault","post","message","Form","onSubmit","size","length","Group","width","Grid","Column","verticalAlign","floated","Input","type","required","value","onChange","val","parseInt","target","newQuestions","placeholder","fluid","Home","Row","as","textAlign","App","Container","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kVAeeA,EAZC,WACd,OACE,mCACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQC,QAAM,EAACC,UAAQ,EAAvB,SACE,cAACC,EAAA,EAAD,CAAQD,UAAQ,EAACE,QAAQ,mB,2BC+CpBC,EAnDO,SAAC,GAKhB,IAJLC,EAII,EAJJA,cACAC,EAGI,EAHJA,iBACAC,EAEI,EAFJA,eACAC,EACI,EADJA,eAEMC,EAAY,aAClB,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAWA,OACE,mCACGP,GACC,eAACQ,EAAA,EAAD,CACEC,QAAS,kBAAMF,GAAQ,IACvBG,OAAQ,kBAAMH,GAAQ,IACtBD,KAAMA,EAHR,UAKE,cAACE,EAAA,EAAMG,OAAP,UAAeX,IACf,eAACQ,EAAA,EAAMI,QAAP,CAAeC,OAAK,EAApB,UACE,cAAC,IAAD,CAAOC,UAAU,QAAQC,IAAKf,IAE7BE,GACC,cAACM,EAAA,EAAMQ,YAAP,UACGd,EAAee,KAAI,SAACC,GAAD,OAClB,mBAAGJ,UAAU,iBAAb,SACGI,EAASC,WADuBD,EAASE,oBAOpD,cAACZ,EAAA,EAAMa,QAAP,UACE,cAACC,EAAA,EAAD,CAAQC,SAAO,EAACC,QAhCG,WACvBxB,IAAkBI,EACpBH,EAAiB,KAEjBA,EAAiB,IACjBE,MA2BM,SACGH,IAAkBI,EAAYA,EAAY,oBCgE1CqB,EAvGE,WACf,MAAkCpB,mBAAS,IAA3C,mBAAOqB,EAAP,KAAkBC,EAAlB,KACA,EAA8BtB,mBAAS,IAAvC,mBAAOuB,EAAP,KAAgBC,EAAhB,KACA,EAA0CxB,mBAAS,IAAnD,mBAAOL,EAAP,KAAsBC,EAAtB,KACA,EAA4CI,mBAAS,IAArD,mBAAOH,EAAP,KAAuB4B,EAAvB,KAEM3B,EAAc,uCAAG,8BAAA4B,EAAA,sEAEnBJ,EAAa,IAFM,SAGIK,IAAMC,IAC3B,wDAJiB,gBAGXC,EAHW,EAGXA,KAIRP,EACEO,EAAKR,UAAUT,KAAI,SAACkB,GAClB,MAAO,CACLC,SAAUD,EAAEC,SACZC,OAAQ,GACRC,GAAIH,EAAEG,QAIZT,EAAWK,EAAKK,KAhBG,kDAkBnBC,QAAQC,MAAR,MAlBmB,0DAAH,qDAqBpBC,qBAAU,WACRvC,MACC,IAEH,IAAMwC,EAAY,uCAAG,WAAOC,GAAP,qBAAAb,EAAA,6DACnBa,EAAEC,iBADiB,kBAKPb,IAAMc,KACd,oEACA,CACEpB,YACAE,YATa,oBAIfM,KAAQa,EAJO,EAIPA,QAAS5B,EAJF,EAIEA,UAQnBW,EAAkBX,GAClBlB,EAAiB8C,GAbA,kDAejBP,QAAQC,MAAR,MAfiB,0DAAH,sDAkBlB,OACE,qCACE,eAACO,EAAA,EAAD,CAAMC,SAAUN,EAAc7B,UAAU,cAAcoC,KAAK,QAA3D,UACwB,IAArBxB,EAAUyB,OACT,cAAC,EAAD,IAEAzB,EAAUT,KAAI,SAACkB,GAAD,OACZ,eAACa,EAAA,EAAKI,MAAN,CAAYC,MAAM,QAAlB,UACE,cAACC,EAAA,EAAKC,OAAN,CAAaC,cAAc,SAASC,QAAQ,OAA5C,SACE,gCAAQtB,EAAEC,aAGZ,cAACkB,EAAA,EAAKC,OAAN,UACE,cAACP,EAAA,EAAKU,MAAN,CACEC,KAAK,SACLC,UAAQ,EACRC,MAAO1B,EAAEE,OACTyB,SAAU,SAAClB,GACT,IAAMmB,EAAMC,SAASpB,EAAEqB,OAAOJ,OAExBK,EAAexC,EAAUT,KAAI,SAACmB,GAClC,OAAIA,EAASE,KAAOH,EAAEG,GACb,2BACFF,GADL,IAEEC,OAAQ0B,IAGH3B,KAGXT,EAAauC,IAEfC,YAAY,oBAzBahC,EAAEG,OA+BrC,cAAChB,EAAA,EAAD,CAAQ8C,OAAK,EAACX,QAAQ,QAAtB,+BAIDzD,GACC,cAAC,EAAD,CACEA,cAAeA,EACfE,eAAgBA,EAChBD,iBAAkBA,EAClBE,eAAgBA,QCtFXkE,EAbF,WACX,OACE,eAACf,EAAA,EAAD,CAAMxC,UAAU,mBAAhB,UACE,cAACwC,EAAA,EAAKgB,IAAN,UACE,cAAC3D,EAAA,EAAD,CAAQ4D,GAAG,KAAKzE,QAAQ,WAAW0E,UAAU,aAE/C,cAAClB,EAAA,EAAKgB,IAAN,UACE,cAAC,EAAD,UCMOG,MAVf,WACE,OACE,cAAC,IAAD,CAAQ3D,UAAU,MAAlB,SACE,cAAC4D,EAAA,EAAD,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWR,SCPzCS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a7c78145.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Dimmer, Loader, Segment } from 'semantic-ui-react'\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <>\r\n      <Segment>\r\n        <Dimmer active inverted>\r\n          <Loader inverted content='Loading' />\r\n        </Dimmer>\r\n      </Segment>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Loading\r\n","import React, { useState } from 'react'\r\nimport { Button, Modal } from 'semantic-ui-react'\r\nimport Giphy from 'react-hooks-giphy'\r\n\r\nconst FeedbackModal = ({\r\n  feedbackState,\r\n  setFeedbackState,\r\n  feedbacksArray,\r\n  fetchQuestions,\r\n}) => {\r\n  const TRY_AGAIN = 'Try again!'\r\n  const [open, setOpen] = useState(true)\r\n\r\n  const handleFeedbackButton = () => {\r\n    if (feedbackState === TRY_AGAIN) {\r\n      setFeedbackState('')\r\n    } else {\r\n      setFeedbackState('')\r\n      fetchQuestions()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {feedbackState && (\r\n        <Modal\r\n          onClose={() => setOpen(false)}\r\n          onOpen={() => setOpen(true)}\r\n          open={open}\r\n        >\r\n          <Modal.Header>{feedbackState}</Modal.Header>\r\n          <Modal.Content image>\r\n            <Giphy className='giphy' tag={feedbackState} />\r\n\r\n            {feedbacksArray && (\r\n              <Modal.Description>\r\n                {feedbacksArray.map((feedback) => (\r\n                  <p className='feedback-items' key={feedback.questionId}>\r\n                    {feedback.feedbacks}\r\n                  </p>\r\n                ))}\r\n              </Modal.Description>\r\n            )}\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button primary onClick={handleFeedbackButton}>\r\n              {feedbackState === TRY_AGAIN ? TRY_AGAIN : 'Restart'}\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FeedbackModal\r\n","import { React, useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport { Grid, Form, Button } from 'semantic-ui-react'\r\nimport Loading from '../components/Loading'\r\nimport FeedbackModal from './FeedbackModal'\r\n\r\nconst PostForm = () => {\r\n  const [questions, setQuestions] = useState([])\r\n  const [replyId, setReplyId] = useState('')\r\n  const [feedbackState, setFeedbackState] = useState('')\r\n  const [feedbacksArray, setFeedbacksArray] = useState([])\r\n\r\n  const fetchQuestions = async () => {\r\n    try {\r\n      setQuestions([])\r\n      const { data } = await axios.get(\r\n        'https://klippa--tech-calculation-game.herokuapp.com/'\r\n      )\r\n\r\n      setQuestions(\r\n        data.questions.map((q) => {\r\n          return {\r\n            question: q.question,\r\n            answer: '',\r\n            id: q.id,\r\n          }\r\n        })\r\n      )\r\n      setReplyId(data._id)\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    fetchQuestions()\r\n  }, [])\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    try {\r\n      const {\r\n        data: { message, feedbacks },\r\n      } = await axios.post(\r\n        'https://klippa--tech-calculation-game.herokuapp.com/quest/session',\r\n        {\r\n          questions,\r\n          replyId,\r\n        }\r\n      )\r\n      setFeedbacksArray(feedbacks)\r\n      setFeedbackState(message)\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Form onSubmit={handleSubmit} className='ui centered' size='large'>\r\n        {questions.length === 0 ? (\r\n          <Loading />\r\n        ) : (\r\n          questions.map((q) => (\r\n            <Form.Group width='large' key={q.id}>\r\n              <Grid.Column verticalAlign='middle' floated='left'>\r\n                <label>{q.question}</label>\r\n              </Grid.Column>\r\n\r\n              <Grid.Column>\r\n                <Form.Input\r\n                  type='number'\r\n                  required\r\n                  value={q.answer}\r\n                  onChange={(e) => {\r\n                    const val = parseInt(e.target.value)\r\n\r\n                    const newQuestions = questions.map((question) => {\r\n                      if (question.id === q.id) {\r\n                        return {\r\n                          ...question,\r\n                          answer: val,\r\n                        }\r\n                      } else {\r\n                        return question\r\n                      }\r\n                    })\r\n                    setQuestions(newQuestions)\r\n                  }}\r\n                  placeholder='Your Answer'\r\n                />\r\n              </Grid.Column>\r\n            </Form.Group>\r\n          ))\r\n        )}\r\n        <Button fluid floated='right'>\r\n          Submit Answers\r\n        </Button>\r\n      </Form>\r\n      {feedbackState && (\r\n        <FeedbackModal\r\n          feedbackState={feedbackState}\r\n          feedbacksArray={feedbacksArray}\r\n          setFeedbackState={setFeedbackState}\r\n          fetchQuestions={fetchQuestions}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PostForm\r\n","import React from 'react'\r\nimport { Grid, Header } from 'semantic-ui-react'\r\nimport PostForm from '../components/PostForm'\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Grid className='ui centered home'>\r\n      <Grid.Row>\r\n        <Header as='h1' content='New Game' textAlign='center' />\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <PostForm />\r\n      </Grid.Row>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import './App.css'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport { Container } from 'semantic-ui-react'\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\nimport Home from './pages/Home'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router className='App'>\r\n      <Container>\r\n        <Route exact path='/' component={Home} />\r\n      </Container>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}